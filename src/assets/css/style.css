/** ==== RESET ====*/
/* Box sizing */
*,
*::before,
*::after {
	box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
h5,
p,
figure,
blockquote,
dl,
dd {
	margin: 0;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
	list-style: none;
	margin: 0;
	padding: 0;
}

/* Set core root defaults */
html:focus-within {
	scroll-behavior: smooth;
}

/* Set core body defaults */
body {
	min-height: 100vh;
	text-rendering: optimizeSpeed;
	line-height: 1.5;
	background-color: var(--background-primary);
}

/* A elements that don't have a class get default styles */
a:not([class]) {
	text-decoration-skip-ink: auto;
}

a {
	color: var(--text-dark);
	text-decoration-color: var(--color-red);
	text-underline-offset: 1px;
	text-decoration: none;
	transition: all 0.3s ease;
}

a:hover,
.navlink-active {
	text-decoration: underline;
	color: var(--color-red);
	text-decoration-color: var(--text-dark);
	text-underline-offset: 2px;
}
/* Make images easier to work with */
img,
picture {
	max-width: 100%;
	display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
	font: inherit;
}

/** ==== VARIABLES ==== */
/* From here, all ratios can be changed with --ratio and --s0 variables*/
:root {
	--ratio: 1.5;
	--s-5: calc(var(--s-4) / var(--ratio));
	--s-4: calc(var(--s-3) / var(--ratio));
	--s-3: calc(var(--s-2) / var(--ratio));
	--s-2: calc(var(--s-1) / var(--ratio));
	--s-1: calc(var(--s0) / var(--ratio));
	--s0: 1rem;
	--s1: calc(var(--s0) * var(--ratio));
	--s2: calc(var(--s1) * var(--ratio));
	--s3: calc(var(--s2) * var(--ratio));
	--s4: calc(var(--s3) * var(--ratio));
	--s5: calc(var(--s4) * var(--ratio));

	--width-measure: 70vw;

	--color-red: #bb1450;
	--color-yellow: #e5bf55;
	--text-dark: #1c2334;
	--text-light: #f8f8ff;
	--text-gray: #909090;
	--background-secondary: #eaca72;
	--background-primary: #f3eee4;
	--color-shadow: rgba(23, 11, 41, 0.12);
	--box-shadow: 0 2px 10px var(--color-shadow);
}

/** ==== FONTS AND FONTS SIZES ==== */
body {
	font-family: -apple-system, BlinkMacSystemFont, avenir next, avenir,
		helvetica neue, helvetica, Ubuntu, roboto, noto, segoe ui, arial,
		sans-serif;
	color: var(--text-dark);
}

h1,
h2,
h3,
h4,
h5,
h6 {
	max-width: 35ch;
	font-family: Georgia, 'Times New Roman', Times, serif;

	line-height: 1.1;
	font-weight: 900;
}

h1 {
	font-size: var(--s4);
}
h2 {
	font-size: var(--s3);
}
h3 {
	font-size: var(--s2);
}
h4 {
	font-size: var(--s1);
}
h5 {
	font-size: var(--s0);
}
h6 {
	font-size: var(--s0);
}

@media (max-width: 450px) {
	h1 {
		font-size: var(--s3);
	}
	h2 {
		font-size: var(--s2);
	}
	h3 {
		font-size: var(--s1);
	}
	h4 {
		font-size: var(--s0);
	}
	h5 {
		font-size: var(--s0);
	}
	h6 {
		font-size: var(--s0);
	}
}

/** == GLOBAL FOCUS == */
:focus {
	outline: 1px solid var(--color-red);
	outline-offset: 0.25rem;
}

/** ==== GLOBAL INPUT ==== */
input,
select {
	box-shadow: 0 2px 10px var(--color-shadow);
	padding: var(--input-padding, 0.6rem);
	border: 2px solid;
	min-inline-size: 18rem;
}

select {
	-webkit-appearance: none;
	-moz-appearance: none;
	appearance: none;
}

input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus,
textarea:-webkit-autofill,
textarea:-webkit-autofill:hover,
textarea:-webkit-autofill:focus,
select:-webkit-autofill,
select:-webkit-autofill:hover,
select:-webkit-autofill:focus {
	border: 2px solid var(--text-dark);
	-webkit-text-fill-color: inherit;
	-webkit-box-shadow: 0 0 0px 1000px var(--background-light) inset;
	/* transition: background-color 5000s ease-in-out 0s; */
}

input:focus + label {
	top: -1.5rem;
}

label {
	color: var(--text-dark);
	font-size: 0.9rem;
	position: absolute;
	left: 0;
	top: 3rem;
	/* transform: translateY(-50%); */
	transition: 0.2s ease;
}

.invalid-input {
	border-color: red;
}

/** ======== UTILITY CLASSES ======== */
/*Utility classes are reusable classes that do one simple job*/
.color-red {
	color: var(--color-red) !important;
}

.background-primary {
	background-color: var(--background-primary);
}

.background-secondary {
	background-color: var(--background-secondary);
}

.text-underline {
	text-decoration: underline;
	text-decoration-color: var(--color-red);
	text-underline-offset: 1px;
}

.margin-top-1 {
	margin-top: var(--s1) !important;
}
.margin-top-2 {
	margin-top: var(--s2) !important;
}
.margin-top-3 {
	margin-top: var(--s3) !important;
}

.input-wrapper {
	position: relative;
}

.text-bold {
	font-weight: bold;
}
/** ======== COMPOSITION CLASSES ======== */
/*Composition classes are reusable classes that make layout*/
/** ==== WRAP ==== */
.wrap {
	display: flex;
	flex-wrap: wrap;
	justify-content: var(--wrap-justify, center);
	align-items: var(--wrap-align, center);
	gap: var(--wrap-space, clamp(1.375rem, 1.2rem + 0.89vw, 2rem));
}

/** ==== CENTER ==== */
.center {
	box-sizing: content-box;
	margin-inline: auto;
	max-inline-size: var(--measure);
	display: flex;
	flex-direction: column;
	align-items: center;
}

/** ==== WRAPPER ==== */
.wrapper {
	/* width: --width-measure; */
	width: clamp(16rem, 93vw, 75rem);
	margin-left: auto;
	margin-right: auto;
	padding-left: clamp(1.09rem, 1rem + 0.47vw, 1.33rem);
	padding-right: clamp(1.09rem, 1rem + 0.47vw, 1.33rem);
	position: relative;
}

/** ==== BOX ==== */
.box {
	padding: var(--s-1);
	/* border: var(--s-5) solid; */
	--color-light: #fff;
	--color-dark: #000;
	color: var(--text-dark);
	background-color: var(--color-yellow);
	box-shadow: var(--box-shadow);
}

.box * {
	color: inherit;
}

/** ==== CLUSTER ==== */
.cluster {
	display: flex;
	flex-wrap: wrap;
	gap: var(--space, 1rem);
	justify-content: center;
	align-items: center;
}

/** ==== REGION ==== */
.region {
	padding-top: var(--region-padding, clamp(2.67rem, 2.07rem + 3vw, 4.21rem));
	padding-bottom: var(
		--region-padding,
		clamp(2.67rem, 2.07rem + 3vw, 4.21rem)
	);
}

/** ==== STACK ==== */
.stack {
	display: flex;
	flex-direction: column;
	justify-content: var(--stack-justify, flex-start);
	align-items: var(--stack-align, flex-start);
}

.stack > * {
	margin-block: 0;
}

.stack > * + * {
	margin-block-start: var(--stack-space, 1.5rem);
}

/** ==== BUTTON ==== */
.button,
.button-small,
.button-secondary {
	display: inline-block;
	padding: var(--s-1, 0.8rem) var(--s2, 2.5rem);
	border: solid 3px var(--color-red);
	border-radius: 10px;
	color: var(--text-dark);
	background-color: var(--color-yellow);
	cursor: pointer;
	line-height: 1;
	text-align: center;
	text-decoration: none !important;
	text-transform: uppercase;
	font-weight: 600;
	transition: all 0.2s ease;
}

.button-secondary {
	background-color: var(--text-dark);
	color: var(--color-yellow);
}

.button-small {
	padding: var(--s-2) var(--s1);
	font-size: var(--s-1);
}

.button:hover,
.button:active,
.button-small:hover,
.button-small:active,
.button-secondary:hover,
.button-secondary:active {
	border-radius: 0;
	color: var(--color-red);
}

.active-list {
	border-radius: 10px;
	color: var(--text-dark);
}

/** ==== HEADER ==== */

header {
	background-color: var(--background-primary);
	padding-block: 0.5rem;
	--wrap-justify: space-between;
}

.logo {
	border: var(--color-red) 3px solid;
	border-radius: 50%;
	padding: 0.5rem;
	background-color: var(--background-secondary);
}

/** ==== HERO ==== */
#hero {
	--stack-align: center;
	text-align: center;
}

#hero img {
	max-width: 10rem;
	transform: rotate(90deg);
}

/** ==== NEW BOOKS REGION ====*/
#new-books-region {
	transition: 0.2s ease;
	--stack-space: var(--s3);
}

.full-bleed {
	width: 99vw;
	margin-left: calc(50% - 50vw);
}

#new-books-region img {
	transform: rotate(0deg);
}

.book-box.stack {
	--stack-space: var(--s0);
	/* --stack-align: flex-start; */
	--stack-justify: space-between;
}
.book-box.box {
	padding: var(--s1);
}

/**==== LOADER ==== */

.loader-container {
	display: flex;
	align-items: center;
}

.loader-container p {
	font-size: var(--s1);
	font-weight: bold;
}
.three-dots {
	position: relative;
	width: 5px;
	height: 5px;
	border-radius: 50px;
	background-color: var(--text-dark);
	color: var(--text-dark);
	animation: dotFlashing 1s infinite linear alternate;
	animation-delay: 0.5s;
	margin-inline-start: 1.5rem;
	margin-block-start: 0.5rem;
}

.three-dots::before,
.three-dots::after {
	content: '';
	width: 5px;
	height: 5px;
	border-radius: 5px;
	background-color: var(--text-dark);
	color: var(--text-dark);
	display: inline-block;
	position: absolute;
	top: 0;
	animation: dotFlashing 1s infinite alternate;
}

.three-dots::before {
	left: -15px;
	animation-delay: 0s;
}

.three-dots::after {
	left: 15px;
	animation-delay: 1s;
}

@keyframes dotFlashing {
	0% {
		background-color: var(--text-dark);
	}
	50%,
	100% {
		background-color: transparent;
	}
}
